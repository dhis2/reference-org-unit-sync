- route:
    id: dhis2TargetRoute
    description: Determines the type of synchronisation to be performed on the target server.
    routeConfigurationId: deadLetterQueueRouteConfig
    from:
      uri: direct:dhis2Target
      steps:
        - choice:
            when:
              - simple: ${headers.DebeziumOperation} == 'd'
                steps:
                  - to: direct:deleteResource
            otherwise:
              steps:
                - to: direct:importMetadata

- route:
    id: importMetadataRoute
    description: Imports metadata to the target server.
    routeConfigurationId: deadLetterQueueRouteConfig
    from:
      uri: direct:importMetadata
      steps:
        - setHeader:
            name: CamelDhis2.queryParams
            groovy: "['importStrategy': 'CREATE_AND_UPDATE', 'idScheme': variables.target.idScheme]"
        - toD:
            uri: dhis2:post/resource
            parameters:
              path: metadata
              baseApiUrl: ${variables.target['dhis2ApiUrl']}
              username: ${variables.target['dhis2ApiUsername']}
              password: ${variables.target['dhis2ApiPassword']}
              personalAccessToken: ${variables.target['personalAccessToken']}
        - removeHeader: CamelDhis2.queryParams
        - unmarshal:
            json: { }
        - choice:
            when:
              - simple: "${body['status']} == 'SUCCESS' || ${body['status']}  == 'OK'"
                steps:
                  - log: Successfully synced resource [${variables.id}] with target server [${variables.target['dhis2ApiUrl']}]
                  - to: direct:reportSuccess
            otherwise:
              steps:
                - to: direct:reportFailure
                - throwException:
                    message: "Error while syncing resource [${variables.id}] with target server [${variables.target['dhis2ApiUrl']}]: ${body}"
                    exceptionType: java.lang.Exception

- route:
    id: deleteResourceRoute
    description: Deletes an org unit on the target server.
    routeConfigurationId: deadLetterQueueRouteConfig
    from:
      uri: direct:deleteResource
      steps:
        - doTry:
            steps:
              - toD:
                  uri: dhis2:delete/resource
                  parameters:
                    path: "organisationUnits/${variables.id}"
                    baseApiUrl: ${variables.target['dhis2ApiUrl']}
                    username: ${variables.target['dhis2ApiUsername']}
                    password: ${variables.target['dhis2ApiPassword']}
                    personalAccessToken: ${variables.target['personalAccessToken']}
              - log: Synced deleted org unit [${variables.id}] with target server [${variables.target['dhis2ApiUrl']}]
              - to: direct:reportSuccess
              - doCatch:
                  exception:
                    - org.hisp.dhis.integration.sdk.api.RemoteDhis2ClientException
                  onWhen:
                    simple: ${exception.cause.httpStatusCode} == 404
                  steps:
                    - log:
                        loggingLevel: ERROR
                        message: Deleted org unit [${variables.id}] not found on target server [${variables.target['dhis2ApiUrl']}]

- route:
    id: reportSuccessRoute
    description: |
      Transmits a message to a user's inbox in the target DHIS2 server notifying them that a synchronisation succeeded. 
      The DHIS2 user recipient is set from the `target.[n].messageConversationUserId` property.
    routeConfigurationId: deadLetterQueueRouteConfig
    from:
      uri: direct:reportSuccess
      steps:
        - to:
            description: Materialises a template to create the success message.
            uri: freemarker:templates/messageBodySuccess.json.ftl
        - toD:
            description: Creates a message conversation containing the success message on the target DHIS2 server.
            uri: dhis2:post/resource
            parameters:
              path: messageConversations
              baseApiUrl: ${variables.target['dhis2ApiUrl']}
              username: ${variables.target['dhis2ApiUsername']}
              password: ${variables.target['dhis2ApiPassword']}
              personalAccessToken: ${variables.target['personalAccessToken']}
        - unmarshal:
            json: { }
        - choice:
            when:
              - simple: "${body['status']} != 'SUCCESS' && ${body['status']}  != 'OK'"
                steps:
                  - log:
                      loggingLevel: ERROR
                      message: "Error while reporting successful sync for resource [${variables.id}] to target server [${variables.target['dhis2ApiUrl']}]: ${body}"

- route:
    id: reportFailureRoute
    description: |
      Transmits a message to a user's inbox in the target DHIS2 server notifying them that a synchronisation failed. The
      DHIS2 user recipient is set from the `target.[n].messageConversationUserId` property.
    routeConfigurationId: deadLetterQueueRouteConfig
    from:
      uri: direct:reportFailure
      steps:
        - to:
            description: Materialises a template to create the failure message.
            uri: freemarker:templates/messageBodyFailure.json.ftl
        - toD:
            description: Creates a message conversation containing the failure message on the target DHIS2 server.
            uri: dhis2:post/resource
            parameters:
              path: messageConversations
              baseApiUrl: ${variables.target['dhis2ApiUrl']}
              username: ${variables.target['dhis2ApiUsername']}
              password: ${variables.target['dhis2ApiPassword']}
              personalAccessToken: ${variables.target['personalAccessToken']}
        - unmarshal:
            json: { }
        - choice:
            when:
              - simple: "${body['status']} != 'SUCCESS' && ${body['status']}  != 'OK'"
                steps:
                  - log:
                      loggingLevel: ERROR
                      message: "Error while reporting failure sync for resource [${variables.id}] to target server [${variables.target['dhis2ApiUrl']}]: ${body}"